# Base Configration
# unbind-key C-b
# set -g prefix 'C-a'
# bind-key 'C-a' send-prefix
#
# set -g default-terminal "screen-256color"
# set	-g status-keys vi
# setw -g mode-keys vi

# Manipulate windows and panels like vi
unbind '"'
unbind %
bind s split-window -v
bind v split-window -h

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind < resize-pane -L 10
bind > resize-pane -R 10
bind - resize-pane -D 5
bind + resize-pane -U 5

bind q killp

#####status bar#####

set -g status-left "#[fg=orange]s#S:w#I.p#P#[default]"

set -g status-bg colour246
set -g status-fg colour236
set -g status-attr default

# default window title colors
setw -g window-status-fg colour236
setw -g window-status-bg default

# active window title colors
setw -g window-status-current-fg colour0 #orange
setw -g window-status-current-bg default

# panel border
set -g pane-active-border-fg colour251
set -g pane-border-fg colour241

# Smart pane switching with awareness of vim splits
 # is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
 # bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
 # bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
 # bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
 # bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
 # bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
